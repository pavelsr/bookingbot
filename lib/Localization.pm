package Localization;

use strict;
use warnings;
use utf8;

use parent ("Exporter");

my %strings = (
	"English" => {
		"na"                                  => "N/A",

		"datetime_format"                     => "%%d %%b %%H:%%M",
		"contact_format"                      => "‚ñ∂ %s %s\nüìû %s",

		"span_regexp"                         => qr/(?:[^\d\s]+\s+)?([^\d\s,]+)(?:(?:\s*,\s*)|(?:\s+))([^\d\s]+)\s+(\d+)(?:[:.-](\d+))?(?:\s+[^\d\s]+\s+(\d+)(?:[:.-](\d+))?)?/i,
		"today"                               => "today",
		"tomorrow"                            => "tomorrow",

		"monday_full"                         => "monday",
		"tuesday_full"                        => "tuesday",
		"wednesday_full"                      => "wednesday",
		"thursday_full"                       => "thursday",
		"friday_full"                         => "friday",
		"saturday_full"                       => "saturday",
		"sunday_full"                         => "sunday",

		"monday_short"                        => "mon",
		"tuesday_short"                       => "tue",
		"wednesday_short"                     => "wed",
		"thursday_short"                      => "thu",
		"friday_short"                        => "fri",
		"saturday_short"                      => "sat",
		"sunday_short"                        => "sun",

		"weekday_preposition"                 => "on",
		"from_preposition"                    => "from",
		"to_preposition"                      => "to",

		"30_min"                              => "30 minutes",
		"1_hour"                              => "1 hour",
		"2_hours"                             => "2 hours",
		"3_hours"                             => "3 hours",

		"start"                               => "Hello! I am FabLab61 booking bot",
		"contact"                             => "Share your contact with me in order to book tools",
		"invalid_contact"                     => "This is not information I need. Try again",
		"begin"                               => "OK. Let's begin!",
		"select_resource"                     => "Select tool for booking",
		"resource_not_found"                  => "I can't found free tools for now, sorry. Try again later",
		"invalid_resource"                    => "This is not information I need. Try again",
		"select_duration"                     => "OK. How long will you use the tool?",
		"duration_not_found"                  => "I can't found free vacancies for this tool, sorry. Try again later",
		"invalid_duration"                    => "This is not information I need. Try again",
		"select_datetime"                     => "OK. Select convenient time",
		"invalid_datetime"                    => "This is not information I need. Try again",
		"instructor_not_found"                => "I can't found an instructor for you (looks like this time has been booked already). Please, select another time",
		"booked"                              => "OK, done. I have booked %s for you at %s",
		"booked_by"                           => "Booked by %s",
		"instructor_contact"                  => "Here is your instructor contact:",

		"press_refresh_button"                => "Press the button to refresh data",
		"refresh"                             => "Refresh",

		"instructor_start"                    => "Hello! I am FabLab61 booking bot",
		"instructor_cancel_operation"         => "‚ùå Cancel operation",
		"instructor_operation_cancelled"      => "Operation cancelled",
		"instructor_menu"                     => "What can I do for you?",
		"instructor_show_schedule"            => "üìí Show my schedule",
		"instructor_add_record"               => "‚ûï Add record to the schedule",
		"instructor_schedule"                 => "OK, I am going to send you the schedule in a moment",
		"instructor_record_time"              => "Enter time when you are available",
		"instructor_new_book"                 => "Hi! I have received new book record for you, here is what I have:\nResource: %s\nBooked from %s to %s\nI will send you the user contact in a moment\nYour contact has been sent to the user already\nHave a nice day! üòä",

		"group_new_book"                      => "Hi guys! I have received new book record for instructor %s (%s), here is what I have:\nResource: %s\nBooked from %s to %s\nI will post here the user contact in a moment\nThe instructor's contact has been sent to the user already\nHave a nice day! üòä",
		"group_new_book_fallback"             => "Hi guys! I have received new book record, here is what I have:\nResource: %s\nBooked from %s to %s\nI will post here the user contact in a moment\nHave a nice day! üòä",
	},

	"Russian" => {
		"na"                                  => "–ù/–î",

		"today"                               => "—Å–µ–≥–æ–¥–Ω—è",
		"tomorrow"                            => "–∑–∞–≤—Ç—Ä–∞",

		"monday_full"                         => "–ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫",
		"tuesday_full"                        => "–≤—Ç–æ—Ä–Ω–∏–∫",
		"wednesday_full"                      => "—Å—Ä–µ–¥–∞",
		"thursday_full"                       => "—á–µ—Ç–≤–µ—Ä–≥",
		"friday_full"                         => "–ø—è—Ç–Ω–∏—Ü–∞",
		"saturday_full"                       => "—Å—É–±–±–æ—Ç–∞",
		"sunday_full"                         => "–≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ",

		"monday_short"                        => "–ø–Ω",
		"tuesday_short"                       => "–≤—Ç",
		"wednesday_short"                     => "—Å—Ä",
		"thursday_short"                      => "—á—Ç",
		"friday_short"                        => "–ø—Ç",
		"saturday_short"                      => "—Å–±",
		"sunday_short"                        => "–≤—Å",

		"weekday_preposition"                 => "–≤",
		"from_preposition"                    => "—Å",
		"to_preposition"                      => "–¥–æ",

		"30_min"                              => "30 –º–∏–Ω—É—Ç",
		"1_hour"                              => "1 —á–∞—Å",
		"2_hours"                             => "2 —á–∞—Å–∞",
		"3_hours"                             => "3 —á–∞—Å–∞",

		"start"                               => "–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¥–ª—è –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è FabLab61",
		"contact"                             => "–ü—Ä–∏—à–ª–∏ –º–Ω–µ —Å–≤–æ–∏ –∫–æ–Ω—Ç–∞–∫—Ç—ã, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—é",
		"invalid_contact"                     => "–≠—Ç–æ –Ω–µ —Ç–æ, —á—Ç–æ –º–Ω–µ –Ω—É–∂–Ω–æ. –ü–æ–ø—Ä–æ–±—É–π –µ—â—ë —Ä–∞–∑",
		"begin"                               => "–•–æ—Ä–æ—à–æ. –ü—Ä–∏—Å—Ç—É–ø–∏–º!",
		"select_resource"                     => "–í—ã–±–µ—Ä–∏ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ –¥–ª—è –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è",
		"resource_not_found"                  => "–Ø –Ω–µ –Ω–∞—à—ë–ª —Å–≤–æ–±–æ–¥–Ω–æ–≥–æ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è –Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç, –∏–∑–≤–∏–Ω–∏. –ü–æ–ø—Ä–æ–±—É–π –ø–æ–∑–∂–µ",
		"invalid_resource"                    => "–≠—Ç–æ –Ω–µ —Ç–æ, —á—Ç–æ –º–Ω–µ –Ω—É–∂–Ω–æ. –ü–æ–ø—Ä–æ–±—É–π –µ—â—ë —Ä–∞–∑",
		"select_duration"                     => "–ü–æ–Ω—è–ª. –°–∫–æ–ª—å–∫–æ –ø–ª–∞–Ω–∏—Ä—É–µ—à—å —Ä–∞–±–æ—Ç–∞—Ç—å —Å –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ–º?",
		"duration_not_found"                  => "–Ø –Ω–µ –Ω–∞—à—ë–ª —Å–≤–æ–±–æ–¥–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ –¥–ª—è –¥–∞–Ω–Ω–æ–≥–æ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è, –∏–∑–≤–∏–Ω–∏. –ü–æ–ø—Ä–æ–±—É–π –ø–æ–∑–∂–µ",
		"invalid_duration"                    => "–≠—Ç–æ –Ω–µ —Ç–æ, —á—Ç–æ –º–Ω–µ –Ω—É–∂–Ω–æ. –ü–æ–ø—Ä–æ–±—É–π –µ—â—ë —Ä–∞–∑",
		"select_datetime"                     => "–ü–æ–Ω—è–ª. –í—ã–±–µ—Ä–∏ –ø–æ–¥—Ö–æ–¥—è—â–µ–µ –≤—Ä–µ–º—è",
		"invalid_datetime"                    => "–≠—Ç–æ –Ω–µ —Ç–æ, —á—Ç–æ –º–Ω–µ –Ω—É–∂–Ω–æ. –ü–æ–ø—Ä–æ–±—É–π –µ—â—ë —Ä–∞–∑",
		"instructor_not_found"                => "–Ø –Ω–µ —Å–º–æ–≥ –Ω–∞–π—Ç–∏ –∏–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–∞ –¥–ª—è —Ç–µ–±—è (–≤–æ–∑–º–æ–∂–Ω–æ, –≤—ã–±—Ä–∞–Ω–Ω–æ–µ —Ç–æ–±–æ–π –≤—Ä–µ–º—è —É–∂–µ –∑–∞–Ω—è–ª–∏). –í—ã–±–µ—Ä–∏ –¥—Ä—É–≥–æ–µ –≤—Ä–µ–º—è, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞",
		"booked"                              => "–û—Ç–ª–∏—á–Ω–æ, —è –∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞–ª –¥–ª—è —Ç–µ–±—è %s –Ω–∞ –¥–∞—Ç—É %s",
		"booked_by"                           => "–ó–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞–ª %s",
		"instructor_contact"                  => "–í–æ—Ç –∫–æ–Ω—Ç–∞–∫—Ç —Ç–≤–æ–µ–≥–æ –∏–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–∞:",

		"press_refresh_button"                => "–ù–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É —á—Ç–æ–±—ã –æ–±–Ω–æ–≤–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é",
		"refresh"                             => "–û–±–Ω–æ–≤–∏—Ç—å",

		"instructor_new_book"                 => "–ü—Ä–∏–≤–µ—Ç! –Ø –ø–æ–ª—É—á–∏–ª –Ω–æ–≤—É—é –∑–∞—è–≤–∫—É –Ω–∞ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–≤–æ–µ–≥–æ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è. –í–æ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è, –∫–æ—Ç–æ—Ä–∞—è —É –º–µ–Ω—è –µ—Å—Ç—å:\n–û–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ: %s\n–í—Ä–µ–º—è –±—Ä–æ–Ω–∏: —Å %s –¥–æ %s\n–°–µ–π—á–∞—Å —è –ø—Ä–∏—à–ª—é –∫–æ–Ω—Ç–∞–∫—Ç—ã –∫–ª–∏–µ–Ω—Ç–∞\n–¢–≤–æ–∏ –∫–æ–Ω—Ç–∞–∫—Ç—ã —É–∂–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã\n–•–æ—Ä–æ—à–µ–≥–æ –¥–Ω—è! üòä",

		"group_new_book"                      => "–í—Å–µ–º –ø—Ä–∏–≤–µ—Ç! –Ø –ø–æ–ª—É—á–∏–ª –Ω–æ–≤—É—é –∑–∞—è–≤–∫—É –Ω–∞ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è –∏–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–∞ %s (%s). –í–æ—Ç —á—Ç–æ —è —É–∑–Ω–∞–ª:\n–û–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ: %s\n–í—Ä–µ–º—è –±—Ä–æ–Ω–∏: —Å %s –¥–æ %s\n–°–µ–π—á–∞—Å —è –ø—Ä–∏—à–ª—é –∫–æ–Ω—Ç–∞–∫—Ç—ã –∫–ª–∏–µ–Ω—Ç–∞\n–ö–æ–Ω—Ç–∞–∫—Ç—ã –∏–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–∞ —É–∂–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –∫–ª–∏–µ–Ω—Ç—É\n–í—Å–µ–º —Ö–æ—Ä–æ—à–µ–≥–æ –¥–Ω—è! üòä",
		"group_new_book_fallback"             => "–í—Å–µ–º –ø—Ä–∏–≤–µ—Ç! –Ø –ø–æ–ª—É—á–∏–ª –Ω–æ–≤—É—é –∑–∞—è–≤–∫—É –Ω–∞ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ. –í–æ—Ç —á—Ç–æ —è —É–∑–Ω–∞–ª:\n–û–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ: %s\n–í—Ä–µ–º—è –±—Ä–æ–Ω–∏: —Å %s –¥–æ %s\n–°–µ–π—á–∞—Å —è –ø—Ä–∏—à–ª—é –∫–æ–Ω—Ç–∞–∫—Ç—ã –∫–ª–∏–µ–Ω—Ç–∞\n–í—Å–µ–º —Ö–æ—Ä–æ—à–µ–≥–æ –¥–Ω—è! üòä",
	},
);

sub languages {
	my @result = keys %strings;
	\@result;
}

my $fallback = "English";
my $language = $fallback;

sub set_language {
	my ($new_language) = @_;

	my $languages_ = languages;
	my $result = defined $new_language and
		grep { $_ eq $new_language } @$languages_;
	if ($result) {
		$language = $new_language;
	}

	$result;
}

sub lz {
	my ($key, @params) = @_;

	sub _keys {
		my ($language) = @_;
		my @result = keys %{$strings{$language}};
		\@result;
	};

	if (grep { $_ eq $key } keys %{$strings{$language}}) {
		sprintf($strings{$language}{$key}, @params);
	} elsif (grep { $_ eq $key } keys %{$strings{$fallback}}) {
		sprintf($strings{$fallback}{$key}, @params);
	} else {
		$key;
	}
}

sub dt {
	my ($datetime) = @_;
	$datetime->strftime(lz("datetime_format"));
}

our @EXPORT_OK = ("lz", "dt");

1;
